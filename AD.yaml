# aws cloudformation deploy --template-file AD.yaml --stack-name AD --region us-east-2 --parameter-overrides KeyName=sbx0-keypair RestoreModePassword='Password!1' DomainDNSName=mlanza.org DomainNetBIOSName=mlanza SourceCidrForRDP=10.0.0.0/16 VpcId=vpc-09f279bd014bc995f SubnetId=subnet-0599abdc16332851e IamProfile='AmazonSSMRoleForInstancesQuickSetup'

AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  This template creates a single server installation of Active Directory. Domain Administrator password will be the one retrieved from the instance. For adding members to the domain, ensure that they are
  launched in domain member security group created by this template and then configure them to use this instance's private IP as the DNS server. **WARNING** This template creates Amazon EC2 Windows instance
  and related resources. You will be billed for the AWS resources used if you create a stack from this template.

Parameters:
  IamProfile:
    Type: String 
  SubnetId:
    Type: String 
  ImageId:
    Type: String 
    Default: ami-08a57643245353515 #UE2
  VpcId:
    Type: String
  KeyName:
    Description: Name of an existing EC2 KeyPair
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: Amazon EC2 instance type
    Type: String
    Default: t3.large
    ConstraintDescription: must be a valid EC2 instance type.
  DomainDNSName:
    Description: Fully qualified domain name (FQDN) of the forest root domain e.g. corp.example.com
    Type: String
    MinLength: '3'
    MaxLength: '25'
    AllowedPattern: '[a-zA-Z0-9]+\..+'
  DomainNetBIOSName:
    Description: NetBIOS name of the domain (upto 15 characters) for users of earlier versions of Windows e.g. CORP
    Type: String
    MinLength: '1'
    MaxLength: '15'
    AllowedPattern: '[a-zA-Z0-9]+'
  RestoreModePassword:
    Description: Password for a separate Administrator account when the domain controller is in Restore Mode. Must be at least 8 characters containing letters, numbers and symbols
    Type: String
    MinLength: '8'
    MaxLength: '32'
    AllowedPattern: (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    NoEcho: 'True'
  SourceCidrForRDP:
    Description: IP Cidr from which you are likely to RDP into the instances. You can add rules later by modifying the created security groups e.g. 54.32.98.160/32
    Type: String
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: ^([0-9]+\.){3}[0-9]+\/[0-9]+$

Resources:
  DomainController:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          files:
            c:\cfn\cfn-hup.conf:
              content: !Join
                - ''
                - - "[main]\n"
                  - stack=
                  - !Ref 'AWS::StackId'
                  - "\n"
                  - region=
                  - !Ref 'AWS::Region'
                  - "\n"
            c:\cfn\hooks.d\cfn-auto-reloader.conf:
              content: !Join
                - ''
                - - "[cfn-auto-reloader-hook]\n"
                  - "triggers=post.update\n"
                  - "path=Resources.DomainController.Metadata.AWS::CloudFormation::Init\n"
                  - 'action=cfn-init.exe -v -s '
                  - !Ref 'AWS::StackId'
                  - ' -r DomainController'
                  - ' --region '
                  - !Ref 'AWS::Region'
                  - "\n"
            C:\cfn\RunCommand.bat:
              content: "%~1\nIF %ERRORLEVEL% GTR 10 ( exit /b 1 ) else ( exit /b 0 )"
          commands:
            # 2-add-ssm-user:
            #   command: !Sub |
            #     net group "Domain Admins" ssm-user /ADD /DOMAIN
            1-run-dcpromo:
              command: !Join
                - ''
                - - 'C:\cfn\RunCommand.bat "dcpromo /unattend  /ReplicaOrNewDomain:Domain  /NewDomain:Forest  /NewDomainDNSName:'
                  - !Ref 'DomainDNSName'
                  - '  /ForestLevel:4 /DomainNetbiosName:'
                  - !Ref 'DomainNetBIOSName'
                  - ' /DomainLevel:4  /InstallDNS:Yes  /ConfirmGc:Yes  /CreateDNSDelegation:No  /DatabasePath:"C:\Windows\NTDS"  /LogPath:"C:\Windows\NTDS"  /SYSVOLPath:"C:\Windows\SYSVOL" /SafeModeAdminPassword='
                  - !Ref 'RestoreModePassword'
                  - ' /RebootOnCompletion:Yes"'
              waitAfterCompletion: forever
            3-signal-success:
              command: !Join
                - ''
                - - cfn-signal.exe -e 0 "
                  - !Base64
                    Ref: DomainControllerWaitHandle
                  - '"'
          services:
            windows:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - c:\cfn\cfn-hup.conf
                  - c:\cfn\hooks.d\cfn-auto-reloader.conf
    Properties:
      IamInstanceProfile: !Ref IamProfile
      SubnetId: !Ref SubnetId
      ImageId: !Ref ImageId
      InstanceType: !Ref 'InstanceType'
      SecurityGroupIds:
        - !GetAtt 'DomainControllerSecurityGroup.GroupId'
      KeyName: !Ref 'KeyName'
      UserData: !Base64
        Fn::Join:
          - ''
          - - "<script>\n"
            - 'cfn-init.exe -v -s '
            - !Ref 'AWS::StackId'
            - ' -r DomainController '
            - ' --region '
            - !Ref 'AWS::Region'
            - "\n"
            - </script>
  DomainControllerWaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    DependsOn: DomainController
    Properties:
      Handle: !Ref 'DomainControllerWaitHandle'
      Timeout: '1500'
  DomainControllerWaitHandle:
    Type: AWS::CloudFormation::WaitConditionHandle
  DomainControllerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref 'VpcId'
      GroupDescription: Domain Controller
      SecurityGroupIngress:
        - IpProtocol: udp
          FromPort: '123'
          ToPort: '123'
          CidrIp: !Ref 'SourceCidrForRDP'
        - IpProtocol: tcp
          FromPort: '135'
          ToPort: '135'
          CidrIp: !Ref 'SourceCidrForRDP'
        - IpProtocol: udp
          FromPort: '138'
          ToPort: '138'
          CidrIp: !Ref 'SourceCidrForRDP'
        - IpProtocol: tcp
          FromPort: '1024'
          ToPort: '65535'
          CidrIp: !Ref 'SourceCidrForRDP'
        - IpProtocol: tcp
          FromPort: '389'
          ToPort: '389'
          CidrIp: !Ref 'SourceCidrForRDP'
        - IpProtocol: udp
          FromPort: '389'
          ToPort: '389'
          CidrIp: !Ref 'SourceCidrForRDP'
        - IpProtocol: tcp
          FromPort: '636'
          ToPort: '636'
          CidrIp: !Ref 'SourceCidrForRDP'
        - IpProtocol: tcp
          FromPort: '3268'
          ToPort: '3268'
          CidrIp: !Ref 'SourceCidrForRDP'
        - IpProtocol: tcp
          FromPort: '3269'
          ToPort: '3269'
          CidrIp: !Ref 'SourceCidrForRDP'
        - IpProtocol: tcp
          FromPort: '53'
          ToPort: '53'
          CidrIp: !Ref 'SourceCidrForRDP'
        - IpProtocol: udp
          FromPort: '53'
          ToPort: '53'
          CidrIp: !Ref 'SourceCidrForRDP'
        - IpProtocol: tcp
          FromPort: '88'
          ToPort: '88'
          CidrIp: !Ref 'SourceCidrForRDP'
        - IpProtocol: udp
          FromPort: '88'
          ToPort: '88'
          CidrIp: !Ref 'SourceCidrForRDP'
        - IpProtocol: tcp
          FromPort: '445'
          ToPort: '445'
          CidrIp: !Ref 'SourceCidrForRDP'
        - IpProtocol: udp
          FromPort: '445'
          ToPort: '445'
          CidrIp: !Ref 'SourceCidrForRDP'
        - IpProtocol: udp
          FromPort: '135'
          ToPort: '135'
          CidrIp: !Ref 'SourceCidrForRDP'
        - IpProtocol: tcp
          FromPort: '3389'
          ToPort: '3389'
          CidrIp: !Ref 'SourceCidrForRDP'
        - IpProtocol: icmp
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: !Ref 'SourceCidrForRDP'
  
Outputs:
  DomainControllerDNSName:
    Value: !GetAtt 'DomainController.PublicDnsName'
    Description: Public DNS name of Active Directory server for RDP connection
  DomainControllerIP:
    Value: !GetAtt 'DomainController.PrivateIp'
    Description: Private IP address of Active Directory server which is also a DNS server
  DomainAdmin:
    Value: !Join
      - ''
      - - !Ref 'DomainNetBIOSName'
        - \Administrator
    Description: Default domain administrator account
  DomainAdminPassword:
    Value: Please retrieve Administrator password of the instance
